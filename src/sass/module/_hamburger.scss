@use "global"as *;

.hamburger {
  position: fixed;
  right: 15px;
  top: 30px;
  //上から28px、右から20pxの位置に固定
  width: 25px;
  height: 16px;
  //ハンバーガー3本を入れる親要素の大きさが 25px X 16px


  border: none;
  -webkit-transition: all .3s ease-in-out;
  transition: all .3s ease-in-out;
  // background-color: orange;
  //どの範囲がハンバーガーか識別するための色

	z-index: 999;

  @include mq(md) {
    display: none;
  }
}

.hamburger__line {
  display: block;
  margin: auto;
  width: 25px;
  height: 2px;
  /* 線の太さ */
  background-color: white;
  /* 線の色 */

  position: absolute;
  right: 0;
  left: 0;
  /* 左右中央 */
  top: calc((100% - 2px) / 2);
  /* 上下中央 */
  //1本線の太さを引いて、2分割した高さが親要素の上からの高さ

  transition: transform 0.2s, opacity 0.2s;
  /* 変化のアニメーション */
}


.hamburger__line::before,
.hamburger__line::after {
  content: '';
  position: absolute;
  display: block;
  width: 100%;
  height: 100%;
  background-color: white;

  transition: transform 0.2s;
  /* 変化のアニメーション */
}

/* ドロワーが閉じた状態＝ハンバーガー3本線 */
.hamburger__line::before {
  transform: translateY(-7px);
}

//1本線の高さ2px＋間隔5px＝7px
//なぜかというと
//ハンバーガーの高さ16px
//16px-(2px3本)=10px が間隔総量
//線と線の間隔は、10px/2=5px

.hamburger__line::after {
  transform: translateY(7px);
}
//1本線の高さ2px＋間隔5px＝7px

/* ドロワーが開いた状態＝ハンバーガー×印 */
.hamburger[aria-expanded="true"] .hamburger__line {
  //opacity: 0;をつけたら、ばつ印が消えて表示されない
  background: transparent;
  /* 中央線を非表示 */
}

.hamburger[aria-expanded="true"] .hamburger__line::before {
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
  background-color: white;
}

.hamburger[aria-expanded="true"] .hamburger__line::after {
  -webkit-transform: rotate(-45deg);
  -ms-transform: rotate(-45deg);
  transform: rotate(-45deg);
  background-color: white;
}
